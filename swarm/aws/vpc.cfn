{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "InfraKit VPC Builder",

    "Parameters": {
    },

    "Metadata" : {
    },

    "Mappings": {
        "VpcCidrs" : {
            "vpc" : {
                "cidr": "172.31.0.0/16"
            },
            "subnet1" : {
                "cidr": "172.31.16.0/20"
            }
        }
    },

    "Resources": {

        "Vpc" : {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
                "CidrBlock" : { "Fn::FindInMap" : [ "VpcCidrs", "vpc", "cidr" ] },
                "EnableDnsSupport" : "true",
                "EnableDnsHostnames" : "true",
                "Tags": [
                    { "Key" : "Name", "Value" : { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName"}, "VPC"] ] } }
                ]
            }
        },

        "Subnet1" : {
            "DependsOn" : "Vpc",
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : { "Ref" : "Vpc" },
                "CidrBlock" : { "Fn::FindInMap" : [ "VpcCidrs", "subnet1", "cidr" ] },
                "AvailabilityZone" : { "Fn::Select" : [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] },
                "Tags": [
                    { "Key" : "Name", "Value" : { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName"}, "Subnet1"] ] } }
                ]
            }
        },

        "InternetGateway" : {
            "DependsOn" : "Vpc",
            "Type" : "AWS::EC2::InternetGateway",
            "Properties" : {
                "Tags": [
                    { "Key" : "Name", "Value" : { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName"}, "IGW"] ] } }
                ]
            }
        },

        "AttachGateway" : {
            "DependsOn" : ["Vpc", "InternetGateway"],
            "Type" : "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
                "VpcId" : { "Ref" : "Vpc" },
                "InternetGatewayId" : { "Ref" : "InternetGateway" }
            }
        },

        "RouteViaIgw" : {
            "DependsOn" : "Vpc",
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : { "Ref" : "Vpc"},
                "Tags": [
                    { "Key" : "Name", "Value" : { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName"}, "RT"] ] } }
                ]
            }
        },

        "PublicRouteViaIgw" : {
            "DependsOn": ["AttachGateway", "RouteViaIgw"],
            "Type" : "AWS::EC2::Route",
            "Properties" : {
                "RouteTableId" : { "Ref" : "RouteViaIgw" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId" : { "Ref" : "InternetGateway" }
            }
        },

        "Subnet1RouteTableAssociation" : {
            "DependsOn": ["Subnet1", "RouteViaIgw"],
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "Subnet1" },
                "RouteTableId" : { "Ref" : "RouteViaIgw" }
            }
        },

        "SecurityGroup": {
            "DependsOn": "InternetGateway",
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "VPC-wide security group",
                "VpcId": {
                    "Ref": "Vpc"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "-1",
                        "FromPort": "0",
                        "ToPort": "65535",
                        "CidrIp": { "Fn::FindInMap" : [ "VpcCidrs", "vpc", "cidr" ] }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },

        "ProvisionerRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version" : "2012-10-17",
                    "Statement": [ {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [ "ec2.amazonaws.com", "autoscaling.amazonaws.com" ]
                        },
                        "Action": [ "sts:AssumeRole" ]
                    } ]
                },
                "Path": "/"
            }
        },

        "InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [ {
                    "Ref": "ProvisionerRole"
                } ]
            }
        }
    },

    "Outputs": {
    }
}
