{{/*

Infrakit Groups Config

This is a template JSON for managing two groups of instances - managers and workers - on AWS.
To keep things simple, we use the metadata api on AWS to determine subnets and vpc ids.

This is to support the use case where infrakit is running *inside* the cloud environment where
the instances it manages reside.

 */}}
{{ $clusterName := "infrakit-demos" }}
{{ $dockerEngine := "tcp://172.31.12.301:4243" }}
{{ $swarmLeaderIP := "172.31.12.301" }}
{{ $managerInit := "https://chungers.github.io/infrakit-demos/swarm/manager-init.sh" }}
{{ $workerInit := "https://chungers.github.io/infrakit-demos/swarm/worker-init.sh" }}
{{ $workerSize := 3 }}

{{ global "/cluster/name" $clusterName }}

{{ $myGroups := include "aws/groups.json" | from_json }}

{{/* This is necessary to make parameters visible in all the included templates via the 'include' function. */}}

[
    {
        "Plugin": "group",
        "Properties": {
            "ID": "swarm-managers",
            "Properties": {
                "Allocation": {
                    "LogicalIDs": [
                        "{{ $swarmLeaderIP }}",
                        "172.31.12.302",
                        "172.31.12.303"
                    ]
                },
                "Flavor": {
                    "Plugin": "flavor-swarm/manager",
                    "Properties": {
                        "InitScriptTemplateURL": "{{ $managerInit }}",
                        "SwarmJoinIP": "{{ $swarmLeaderIP }}",
                        "Docker" : {
                            "Host" : "{{ $dockerEngine }}"
                        }
                    }
                },
                "Instance": {{ $myGroups.Managers | to_json }}
            }
        }
    }
    ,
    {
        "Plugin": "group",
        "Properties": {
            "ID": "swarm-workers",
            "Properties": {
                "Allocation": {
                    "Size": {{ $workerSize }}
                },
                "Flavor": {
                    "Plugin": "flavor-swarm/worker",
                    "Properties": {
                        "InitScriptTemplateURL": "{{ $workerInit }}",
                        "SwarmJoinIP": "{{ $swarmLeaderIP }}",
                        "Docker" : {
                            "Host" : "{{ $dockerEngine }}"
                        }
                    }
                },
                "Instance": {{ $myGroups.Workers | to_json }}
            }
        }
    }
]
